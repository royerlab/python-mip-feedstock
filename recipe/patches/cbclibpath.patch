--- mip/cbc.orig.py	2024-12-19 13:05:12.262532739 -0800
+++ mip/cbc.py	2024-12-19 13:08:03.242367511 -0800
@@ -69,41 +69,7 @@
             if pathlib not in os.environ["PATH"]:
                 os.environ["PATH"] += ";" + pathlib
     else:
-        if "linux" in platform.lower():
-            if os_is_64_bit:
-                pathlibe = pathlib
-                libfile = os.path.join(pathlib, "cbc-c-linux-x86-64.so")
-                if not exists(libfile):
-                    pathlibe = pathlib
-                    libfile = os.path.join(pathlib, "cbc-c-linux-x86-64.so")
-                pathlib = pathlibe
-            else:
-                raise NotImplementedError("Linux 32 bits platform not supported.")
-        elif platform.lower().startswith("win"):
-            if os_is_64_bit:
-                pathlibe = os.path.join(pathlib, "win64")
-                libfile = os.path.join(pathlibe, "cbc-c-windows-x86-64.dll")
-                if exists(libfile):
-                    if pathlibe not in os.environ["PATH"]:
-                        os.environ["PATH"] = pathlibe + ";" + os.environ["PATH"]
-                else:
-                    pathlibe = pathlib
-                    libfile = os.path.join(pathlibe, "cbc-c-windows-x86-64.dll")
-                    if pathlibe not in os.environ["PATH"]:
-                        os.environ["PATH"] = pathlibe + ";" + os.environ["PATH"]
-                pathlib = pathlibe
-
-            else:
-                raise NotImplementedError("Win32 platform not supported.")
-        elif platform.lower().startswith("darwin") or platform.lower().startswith(
-            "macos"
-        ):
-            if platform_machine().lower().startswith("arm64"):
-                libfile = os.path.join(pathlib, "cbc-c-darwin-arm64.dylib")
-            elif os_is_64_bit:
-                libfile = os.path.join(pathlib, "cbc-c-darwin-x86-64.dylib")
-        if not libfile:
-            raise NotImplementedError("You operating system/platform is not supported")
+        libfile = os.path.join(pathlib, "libcbc.lib")
     old_dir = os.getcwd()
     os.chdir(pathlib)
     cbclib = ffi.dlopen(libfile)
